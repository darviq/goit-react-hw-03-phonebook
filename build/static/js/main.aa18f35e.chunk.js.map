{"version":3,"sources":["components/phonebook/contactForm/ContactForm.js","components/phonebook/contactList/contactItem/ContactItem.js","components/phonebook/contactList/ContactList.js","components/phonebook/Phonebook.js","components/App.js","index.js"],"names":["Form","styled","form","ContactForm","state","name","number","inputHandler","e","target","value","setState","submitHandler","preventDefault","props","addContact","this","onSubmit","type","onChange","Component","Button","button","ContactItem","contact","id","removeContact","data-id","onClick","Input","input","ContactList","contacts","filter","addFilter","length","toLowerCase","includes","map","Phonebook","componentDidMount","localSorageContacts","JSON","parse","localStorage","getItem","componentDidUpdate","setItem","stringify","find","alert","prevState","uuidv4","dataset","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa18f35e.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Form = styled.form`\r\n    width: 300px;\r\n    padding: 10px 0 15px 20px;\r\n    border: 2px solid black;\r\n\r\n    label,\r\n    input {\r\n        display: block;\r\n    }\r\n`;\r\n\r\nexport default class ContactForm extends Component {\r\n    static propTypes = {\r\n        addContact: PropTypes.func,\r\n    };\r\n\r\n    state = {\r\n        name: \"\",\r\n        number: \"\",\r\n    };\r\n\r\n    inputHandler = e => {\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    submitHandler = e => {\r\n        e.preventDefault();\r\n        this.props.addContact({...this.state});\r\n        this.setState({name: \"\", number: \"\"});\r\n    };\r\n\r\n    render() {\r\n        const {name, number} = this.state;\r\n\r\n        return (\r\n            <Form onSubmit={this.submitHandler}>\r\n                <label>\r\n                    Name\r\n                    <input type=\"text\" value={name} name=\"name\" onChange={this.inputHandler} />\r\n                </label>\r\n                <label>\r\n                    Number\r\n                    <input type=\"text\" value={number} name=\"number\" onChange={this.inputHandler} />\r\n                </label>\r\n                <button type=\"submit\">Add contact</button>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n    margin-left: 10px;\r\n`;\r\n\r\nconst ContactItem = ({contact: {name, number, id}, removeContact}) => {\r\n    return (\r\n        <li>\r\n            {name}: {number}\r\n            <Button type=\"button\" data-id={id} onClick={removeContact}>\r\n                Delete\r\n            </Button>\r\n        </li>\r\n    );\r\n};\r\n\r\nContactItem.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string,\r\n    removeContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactItem;\r\n","import ContactItem from \"./contactItem/ContactItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n    display: block;\r\n`;\r\n\r\nconst ContactList = ({state: {contacts, filter}, addFilter, removeContact}) => {\r\n    return (\r\n        <>\r\n            {contacts.length > 0 && (\r\n                <>\r\n                    <h2>Contacts</h2>\r\n                    <label>\r\n                        Find contacts by name\r\n                        <Input type=\"text\" value={filter} name=\"filter\" onChange={addFilter} />\r\n                    </label>\r\n                    <ul>\r\n                        {filter.length > 0\r\n                            ? contacts\r\n                                  .filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n                                  .map(contact => <ContactItem key={contact.id} contact={contact} removeContact={removeContact} />)\r\n                            : contacts.map(contact => <ContactItem key={contact.id} contact={contact} removeContact={removeContact} />)}\r\n                    </ul>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.object),\r\n    filter: PropTypes.string,\r\n    addFilter: PropTypes.func,\r\n    removeContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, {Component} from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\n\r\nexport default class Phonebook extends Component {\r\n    state = {\r\n        contacts: [],\r\n        filter: \"\",\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        const localSorageContacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n        if (localSorageContacts && localSorageContacts.length > 0) {\r\n            this.setState({contacts: [...localSorageContacts]});\r\n        }\r\n    };\r\n\r\n    componentDidUpdate = () => {\r\n        localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    };\r\n\r\n    addFilter = e => {\r\n        this.setState({\r\n            filter: e.target.value,\r\n        });\r\n    };\r\n\r\n    addContact = ({name, number}) => {\r\n        if (this.state.contacts.find(contact => contact.name === name)) {\r\n            alert(`${name} is already in contacts`);\r\n        } else {\r\n            this.setState(prevState => ({\r\n                contacts: [\r\n                    ...prevState.contacts,\r\n                    {\r\n                        name: name,\r\n                        number: number,\r\n                        id: uuidv4(),\r\n                    },\r\n                ],\r\n            }));\r\n        }\r\n    };\r\n\r\n    removeContact = e => {\r\n        this.setState(prevState => ({\r\n            contacts: [...prevState.contacts.filter(contact => contact.id !== e.target.dataset.id)],\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h2>Phonebook</h2>\r\n                <ContactForm addContact={this.addContact} />\r\n                <ContactList state={this.state} addFilter={this.addFilter} removeContact={this.removeContact} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Phonebook from \"./phonebook/Phonebook\";\r\n\r\n// slr - стрелочная с дефолтным экспортом\r\n// rafc - стрелочная с именованым экспортом\r\n\r\nconst App = () => {\r\n    return <Phonebook />;\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}